{
  "name": "gulp-nunjucks-render",
  "version": "1.1.0",
  "description": "Render Nunjucks templates with data",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/carlosl/gulp-nunjucks-render"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "nunjucks",
    "template",
    "templating",
    "view",
    "render",
    "html",
    "javascript"
  ],
  "dependencies": {
    "gulp-util": "~2.2.0",
    "lodash": "^3.3.0",
    "nunjucks": "^2.0.0",
    "through2": "~0.4.0"
  },
  "devDependencies": {
    "mocha": "^2.1.0",
    "should": "^5.0.1"
  },
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/carlosl/gulp-nunjucks-render/issues"
  },
  "homepage": "https://github.com/carlosl/gulp-nunjucks-render",
  "_id": "gulp-nunjucks-render@1.1.0",
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-nunjucks-render\n\n> Render [Nunjucks](http://jlongster.github.io/nunjucks/) templates\n\n*Issues with the output should be reported on the Nunjucks [issue tracker](https://github.com/jlongster/nunjucks/issues).*\n\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/package/gulp-nunjucks-render)\n\n```\nnpm install --save-dev gulp-nunjucks-render\n```\n\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar nunjucksRender = require('gulp-nunjucks-render');\n\ngulp.task('default', function () {\n\tnunjucksRender.nunjucks.configure(['src/templates/'], {watch: false});\n\treturn gulp.src('src/templates/*.html')\n\t\t.pipe(nunjucksRender())\n\t\t.pipe(gulp.dest('dist'));\n});\n```\n\n*Note: To keep Nunjucks render from eating up all your ram, make sure to specify your watch path and turn off Nunjucks' internal watcher. ```nunjucksRender.nunjucks.configure(['src/path/to/templates/'], {watch: false});``` This will also allow you to define your paths relatively.*\n\n\n## Example with gulp data\n\n```js\nvar gulp = require('gulp');\nvar nunjucksRender = require('gulp-nunjucks-render');\nvar data = require('gulp-data');\n\nfunction getDataForFile(file){\n    return {\n        example: 'data loaded for ' + file.relative\n    };\n}\n\ngulp.task('default', function () {\n\tnunjucksRender.nunjucks.configure(['src/templates/'], {watch: false});\n\treturn gulp.src('src/templates/*.html')\n\t    .pipe(data(getDataForFile))\n\t\t.pipe(nunjucksRender())\n\t\t.pipe(gulp.dest('dist'));\n});\n```\n\n\n## API\n\n### nunjucks-render(context)\n\nSame context as [`nunjucks.render()`](http://jlongster.github.io/nunjucks/api.html#render).\n\nFor example\n```\nnunjucksRender({css_path: 'http://company.com/css/'});\n```\n\nFor the following template\n```\n<link rel=\"stylesheet\" href=\"{{ css_path }}test.css\" />\n```\n\nWould render\n```\n<link rel=\"stylesheet\" href=\"http://company.com/css/test.css\" />\n```\n\n### Watch mode\nTo prevent Nunjucks internal watch mode during gulp task use `watch` parameter:\n\n```\nnunjucksRender.nunjucks.configure([ './source' ], { watch: false });\n```\n\n## License\n\nMIT Â© [Carlos G. Limardo](http://limardo.org)\n\n## Shout-outs\n\n[Sindre Sorhus](http://sindresorhus.com/) who wrote the original [gulp-nunjucks](https://www.npmjs.org/package/gulp-nunjucks) for precompiling Nunjucks templates. I updated his to render instead of precompile.\n\n[kristijanhusak](http://github.com/kristijanhusak) for bug fixes and help with maintenance.\n",
  "_from": "gulp-nunjucks-render@"
}
